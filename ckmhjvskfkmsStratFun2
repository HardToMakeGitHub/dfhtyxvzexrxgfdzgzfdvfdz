repeat wait()until game:IsLoaded()loadstring(game:HttpGet("https://raw.githubusercontent.com/banbuskox/dfhtyxvzexrxgfdzgzfdvfdz/main/ikcxujvkdsStrat"))()loadstring(game:HttpGet("https://banbus.cf/Scripts/IsAutoStratMain"))()if getgenv().StratMaintance==true then repeat wait()loadstring(game:HttpGet("https://banbus.cf/Scripts/IsAutoStratMain"))()getgenv().status="Script in maintance, waiting..."wait(1)until getgenv().StratMaintance==false or getgenv().SkipStratMaintance==true end getgenv().status="Loading"getgenv().count=0 if game.PlaceId==5591597781 then game:GetService("Workspace").Towers.ChildAdded:Connect(function(a)getgenv().count=getgenv().count+1 end)end local a={}local b=nil local c=game:WaitForChild('ReplicatedStorage')local a=c:WaitForChild("RemoteFunction")local a=c:WaitForChild("RemoteEvent")function isgame()if game.PlaceId==5591597781 then return true else return false end end if not isgame()then wait(1)if not isfolder("TDS_AutoStrat")then makefolder("TDS_AutoStrat")end if not isfile("TDS_AutoStrat/Troll.txt")then local a=game:GetService("Players").LocalPlayer.PlayerGui.LobbyGui.Prompt.Containers.Message.Notice local b=game:GetService("Players").LocalPlayer.PlayerGui.LobbyGui a.Message.Text="We are sorry to announce this to you, your account has been detected using one of the following cheats/scripts : AutoFarm, AutoStrat, Equipper, TDS Recorder. Your account has been reseted and you got disqualified from this event and every upcoming one."a.Visible=true b.Menu.Buttons.Achievements:Remove()for a,a in pairs(game:GetService("Players").LocalPlayer.PlayerGui.LobbyGui.Hotbar.Troops:GetDescendants())do if a.Name=="Hint"or a.Name=="Icon"or a.Name=="Label"then a:Remove()end end b.Hotbar.Level.Label.Text="Level 0 [0/100]"b.Hotbar.Level.Bar:Remove()b.Hotbar.Stats.Triumphs.Amount.Text="0"b.Hotbar.Stats.Wins.Amount.Text="0"b.Menu.Containers.Shop:Remove()for a,a in pairs(b.Menu.Containers.Inventory.Content.Pages.Troops.Display:GetDescendants())do a:Remove()end for a,a in pairs(b.Menu.Containers.Inventory.Content.Pages.Troops.Holder.Troops:GetDescendants())do a:Remove()end for a,a in pairs(b.Menu.Containers.Inventory.Content.Pages.Emotes.Display:GetDescendants())do a:Remove()end for a,a in pairs(b.Menu.Containers.Inventory.Content.Pages.Emotes.Holder:GetDescendants())do a:Remove()end for a,a in pairs(b.Menu.Containers.Inventory.Content.Pages.Crates.Display:GetDescendants())do a:Remove()end for a,a in pairs(b.Menu.Containers.Inventory.Content.Pages.Crates.Holder:GetDescendants())do a:Remove()end writefile("TDS_AutoStrat/Troll.txt","ctnC+5tLWhjjJZccUxSTG8casrMsCITT/za/3ELcQSVzz/Wm0xpJ2Ksf11a/ZZkDcuZ4fLp3SCz23g2zeiAnVaygF1HK6IgZvZqibdDKAgqz20JoMIZhJ4OofcXh+hspdYxF2WAJXsd1Ixx9FXwOSg==")writefile("xdieee.txt","KxjhVghCJH")else local a=game:GetService("Players").LocalPlayer.PlayerGui.LobbyGui.Prompt.Containers.Message.Notice a.Message.Text="Thing with data wipe was a joke lol, have a nice day!"a.Visible=true end end if isgame()and getgenv().PotatoPC then spawn(function()wait(3)for a,a in pairs(game.Workspace.Map:GetChildren())do if a.Name~="Paths"then a:Remove()end end local a=game.Workspace.Terrain a.Transparency=0 a.WaterReflectance=0 a.WaterTransparency=0 a.WaterWaveSize=0 a.WaterWaveSpeed=0 end)end if isgame()then spawn(function()wait(3)for a,a in pairs(game:GetService("Lighting"):GetChildren())do if a.Name~="Sky"then a:Remove()end end game.Lighting.FogStart=10000000 game.Lighting.FogEnd=10000000 game.Lighting.Brightness=1 local a if getgenv().CameraSys==true then a=game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame+Vector3.new(0,50,0)else a=game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame+Vector3.new(0,20,0)end local c=Instance.new("Part")c.Transparency=1 c.Anchored=true c.CanCollide=true c.Parent=game.Workspace c.CFrame=a if getgenv().CameraSys==true then game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame=game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame+Vector3.new(0,55,0)else game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame=game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame+Vector3.new(0,25,0)end if game.CoreGui:FindFirstChild("AutoStratsLogger")then game.CoreGui:FindFirstChild("AutoStratsLogger"):Remove()end local a=Instance.new("ScreenGui")local d=Instance.new("Frame")local f=Instance.new("ImageLabel")local c=Instance.new("Frame")local e=Instance.new("TextLabel")local g=Instance.new("ScrollingFrame")a.Name="AutoStratsLogger"a.Parent=game:WaitForChild("CoreGui")a.ZIndexBehavior=Enum.ZIndexBehavior.Sibling d.Name="Main"d.Parent=a d.BackgroundColor3=Color3.fromRGB(23,21,30)d.BorderSizePixel=0 d.Position=UDim2.new(0.544935644,0,0.355803162,0)d.Size=UDim2.new(0,500,0,400)f.Name="Glow"f.Parent=d f.BackgroundColor3=Color3.fromRGB(255,255,255)f.BackgroundTransparency=1.000 f.BorderSizePixel=0 f.Position=UDim2.new(0,-15,0,-15)f.Size=UDim2.new(1,30,1,30)f.ZIndex=0 f.Image="rbxassetid://4996891970"f.ImageColor3=Color3.fromRGB(15,15,15)f.ScaleType=Enum.ScaleType.Slice f.SliceCenter=Rect.new(20,20,280,280)c.Name="Top_Container"c.Parent=d c.AnchorPoint=Vector2.new(0.5,0)c.BackgroundColor3=Color3.fromRGB(255,255,255)c.BackgroundTransparency=1.000 c.Position=UDim2.new(0.5,0,0,18)c.Size=UDim2.new(1,-40,0,20)e.Name="Title"e.Parent=c e.BackgroundColor3=Color3.fromRGB(255,255,255)e.BackgroundTransparency=1.000 e.Position=UDim2.new(0.00764120743,0,-0.400000006,0)e.Size=UDim2.new(0.981785059,0,1.45000005,0)e.Font=Enum.Font.GothamBlack e.Text="AUTOSTRATS LOGGER"e.TextColor3=Color3.fromRGB(255,255,255)e.TextSize=30.000 e.TextXAlignment=Enum.TextXAlignment.Left g.Name="Scroll"g.Parent=d g.Active=true g.AnchorPoint=Vector2.new(0.5,0)g.BackgroundColor3=Color3.fromRGB(255,255,255)g.BackgroundTransparency=1.000 g.BorderSizePixel=0 g.Position=UDim2.new(0.5,4,0,59)g.Size=UDim2.new(1,-20,1,-67)g.BottomImage="rbxassetid://5234388158"g.CanvasSize=UDim2.new(200,0,100,0)g.MidImage="rbxassetid://5234388158"g.ScrollBarThickness=8 g.TopImage="rbxassetid://5234388158"g.VerticalScrollBarInset=Enum.ScrollBarInset.Always local function a()local a=Instance.new('LocalScript',d)a.Name="Dragify"local b=game:GetService("UserInputService")function dragify(c)dragToggle=nil dragInput=nil dragStart=nil local a=nil function updateInput(a)local a=a.Position-dragStart local a=UDim2.new(startPos.X.Scale,startPos.X.Offset+a.X,startPos.Y.Scale,startPos.Y.Offset+a.Y)game:GetService("TweenService"):Create(c,TweenInfo.new(0.1),{Position=a}):Play()end c.InputBegan:Connect(function(a)if(a.UserInputType==Enum.UserInputType.MouseButton1 or a.UserInputType==Enum.UserInputType.Touch)and b:GetFocusedTextBox()==nil then dragToggle=true dragStart=a.Position startPos=c.Position a.Changed:Connect(function()if a.UserInputState==Enum.UserInputState.End then dragToggle=false end end)end end)c.InputChanged:Connect(function(a)if a.UserInputType==Enum.UserInputType.MouseMovement or a.UserInputType==Enum.UserInputType.Touch then dragInput=a end end)game:GetService("UserInputService").InputChanged:Connect(function(a)if a==dragInput and dragToggle then updateInput(a)end end)end dragify(a.Parent)end a()local function a()local a=Instance.new('LocalScript',d)a.Name="Positioning"a.Parent:TweenPosition(UDim2.new(0.5,0,0.5,0),"Out","Quad",1)a.Parent.Draggable=true end a()local f=-0.0073 writefile("TDS_AutoStrat/LastLog.txt","--[START OF LOG]--")function b;(e)local d=os.date("*t")["hour"];local b=os.date("*t")["min"]local c=os.date("*t")["sec"]local a=Color3.fromRGB(255,255,255)local g=Instance.new("TextLabel",g)g.Text="["..d..":"..b..":"..c.."] "..e appendfile("TDS_AutoStrat/LastLog.txt","\n["..d..":"..b..":"..c.."] "..e)g.Size=UDim2.new(0.005,0,0.001,0)g.Position=UDim2.new(0,0,.007+f,0)g.Font=Enum.Font.SourceSansSemibold g.TextColor3=a g.TextStrokeTransparency=0 g.BackgroundTransparency=1 g.BackgroundColor3=Color3.new(0,0,0)g.BorderSizePixel=0 g.BorderColor3=Color3.new(0,0,0)g.FontSize="Size14"g.TextXAlignment=Enum.TextXAlignment.Left g.ClipsDescendants=true f=f+0.0005 end spawn(function()local c=false c=not c game.Players.LocalPlayer.Character.Humanoid.PlatformStand=true game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored=true SprintKey=Enum.KeyCode.LeftShift localPlayer=game.Players.LocalPlayer Camera=game.Workspace.CurrentCamera Mouse=localPlayer:GetMouse()UserInputService=game:GetService("UserInputService")movePosition=Vector2.new(0,0)moveDirection=Vector3.new(0,0,0)targetMovePosition=movePosition lastRightButtonDown=Vector2.new(0,0)rightMouseButtonDown=false targetFOV=70 sprinting=false sprintingSpeed=3 keysDown={}moveKeys={[Enum.KeyCode.D]=Vector3.new(1,0,0),[Enum.KeyCode.A]=Vector3.new(-1,0,0),[Enum.KeyCode.S]=Vector3.new(0,0,1),[Enum.KeyCode.W]=Vector3.new(0,0,-1),[Enum.KeyCode.E]=Vector3.new(0,1,0),[Enum.KeyCode.Q]=Vector3.new(0,-1,0)}Tween=function(b,a,c)if c==1 then; return a else if tonumber(b)then return b*(1-c)+(a*c)else return b:Lerp(a,c)end end end ClampVector3=function(c,b,a)return Vector3.new(math.clamp(c.X,b.X,a.X),math.clamp(c.Y,b.Y,a.Y),math.clamp(c.Z,b.Z,a.Z))end UserInputService.InputChanged:connect(function(a)if a.UserInputType==Enum.UserInputType.MouseMovement then movePosition=movePosition+Vector2.new(a.Delta.x,a.Delta.y)end end)CalculateMovement=function()local c=Vector3.new(0,0,0)for b,a in pairs(keysDown)do c=c+(moveKeys[b]or Vector3.new(0,0,0))end return c end Round=function(a,b)return math.floor((a/b)+.5)*b end Input=function(b,a)if moveKeys[b.KeyCode]then if b.UserInputState==Enum.UserInputState.Begin then keysDown[b.KeyCode]=true elseif b.UserInputState==Enum.UserInputState.End then keysDown[b.KeyCode]=nil end else if b.UserInputState==Enum.UserInputState.Begin then if(b.UserInputType==Enum.UserInputType.MouseButton2)and(c==true)then rightMouseButtonDown=true lastRightButtonDown=Vector2.new(Mouse.X,Mouse.Y)UserInputService.MouseBehavior=Enum.MouseBehavior.LockCurrentPosition elseif b.KeyCode==Enum.KeyCode.Z then targetFOV=20 elseif b.KeyCode==SprintKey then sprinting=true end else if b.UserInputType==Enum.UserInputType.MouseButton2 then rightMouseButtonDown=false UserInputService.MouseBehavior=Enum.MouseBehavior.Default elseif b.KeyCode==Enum.KeyCode.Z then targetFOV=70 elseif b.KeyCode==SprintKey then sprinting=false end end end end Mouse.WheelForward:connect(function()Camera.CoordinateFrame=Camera.CoordinateFrame*CFrame.new(0,0,-5)end)Mouse.WheelBackward:connect(function()Camera.CoordinateFrame=Camera.CoordinateFrame*CFrame.new(-0,0,5)end)UserInputService.InputBegan:connect(Input)UserInputService.InputEnded:connect(Input)game:GetService("RunService").RenderStepped:Connect(function()if c then local a=Mouse.Hit targetMovePosition=movePosition Camera.CoordinateFrame=CFrame.new(Camera.CoordinateFrame.p)*CFrame.fromEulerAnglesYXZ(-targetMovePosition.Y/300,-targetMovePosition.X/300,0)*CFrame.new(CalculateMovement()*((({[true]=sprintingSpeed})[sprinting])or.5))Camera.FieldOfView=Tween(Camera.FieldOfView,targetFOV,.5)if rightMouseButtonDown then UserInputService.MouseBehavior=Enum.MouseBehavior.LockCurrentPosition movePosition=movePosition-(lastRightButtonDown-Vector2.new(Mouse.X,Mouse.Y))lastRightButtonDown=Vector2.new(Mouse.X,Mouse.Y)end end end)local b=2 local a=loadstring(game:HttpGet("https://raw.githubusercontent.com/banbuskox/dfhtyxvzexrxgfdzgzfdvfdz/main/jsdnfjdsfdjnsmvkjhlkslzLIB",true))()local a=a:CreateWindow("Camera")a:Button('Normal',function()game.Players.LocalPlayer.Character.Humanoid.PlatformStand=false game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored=false game.Workspace.CurrentCamera.CameraSubject=game.Players.LocalPlayer.Character.Humanoid game.Workspace.CurrentCamera.CameraType="Follow"b=1 end)a:Button('Follow Enemies (Default)',function()game.Players.LocalPlayer.Character.Humanoid.PlatformStand=true game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored=true game.Workspace.CurrentCamera.CameraType="Follow"b=2 print("2c")end)a:Button('Free Cam',function()b=3 Camera.CameraType=Enum.CameraType.Scriptable game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored=true game.Players.LocalPlayer.Character.Humanoid.PlatformStand=true end)while wait()do if b==1 then pcall(function()c=false end)elseif b==2 then pcall(function()c=false local a=game:GetService("Workspace").Enemies:GetChildren()if#a~=0 then for a,a in pairs(game.Workspace.Enemies:GetChildren())do if a:WaitForChild("HumanoidRootPart").CFrame.Y>-5 then game.Workspace.Camera.CameraSubject=a.HumanoidRootPart wait()break else game.Workspace.Camera.CameraSubject=game:GetService("Workspace").Map.Paths["1"]["1"]break end end else game.Workspace.Camera.CameraSubject=game:GetService("Workspace").Map.Paths["1"]["1"]end end)elseif b==3 then c=true end end end)end)end
function place(troop,pos1,pos2,pos3)
	print("Checking if in game (Troop "..troop..")")
	if isgame() then
		print("Placing (Troop "..troop..")")
		local args = {
			[1] = "Troops",
			[2] = "Place",
			[3] = troop,
			[4] = {
				["Rotation"] = CFrame.new(0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1),
				["Position"] = Vector3.new(pos1,pos2,pos3),
			}
		}
		local placeCheck = nil
		repeat
			placeCheck = RSRF:InvokeServer(unpack(args))
			wait()
		until placeCheck
		print("Placed (Troop "..troop..")")
		output("Placed (Troop "..troop..")")
	end
end
function sell(troop)
	if isgame() then
		repeat wait() until game.Workspace.Towers:FindFirstChild(tostring(troop))
		local args = {
			[1] = "Troops",
			[2] = "Sell",
			[3] = {
				["Troop"] = game.Workspace.Towers[tostring(troop)],
			}
		}
		RSRF:InvokeServer(unpack(args))
	end
end
getgenv().Upgrading = false
function upgrade(troop)
	print("Checking if in game (Troop "..troop..")")
	if isgame() then
		spawn(function()
			repeat wait() until game.Workspace.Towers:FindFirstChild(tostring(troop))
			repeat wait() until getgenv().Upgrading == false
			getgenv().Upgrading = true
			local args = {
				[1] = "Troops",
				[2] = "Upgrade",
				[3] = "Set",
				[4] = {
					["Troop"] = game.Workspace.Towers:WaitForChild(tostring(troop)),
				}
			}
			RSRF:InvokeServer(unpack(args))
			output("Upgraded (Troop "..game.Workspace.Towers[tostring(troop)].Type.Value.." With Number "..tostring(troop)..")")
			getgenv().Upgrading = false
		end)
	end
end
function EquipTroop(troop)
	local args = {
		[1] = "Inventory",
		[2] = "Execute",
		[3] = "Troops",
		[4] = "Add",
		[5] = {
			["Name"] = troop
		}
	}
	RSRE:FireServer(unpack(args))
end
function skip()
	if isgame() then
		local args = {
			[1] = "Waves",
			[2] = "Skip"
		}
		RSRF:InvokeServer(unpack(args))
		output("Skipped Wave")
	end
end
function conv(times,timem)
	local seconds = times
	local cnv = timem * 60
	local seconds = seconds + cnv
	return seconds
end
function ability(troop,aname)
	if isgame() then
		repeat wait() until game.Workspace.Towers:FindFirstChild(tostring(troop))
		local args = {
			[1] = "Troops",
			[2] = "Abilities",
			[3] = "Activate",
			[4] = {
				["Troop"] = game.Workspace.Towers[tostring(troop)],
				["Name"] = aname,
			}
		}
		RSRF:InvokeServer(unpack(args))
		output("Used Ability (Troop "..game.Workspace.Towers[tostring(troop)].Type.Value.." With Number "..tostring(troop).." Ability "..aname..")")
	end
end
function scrip:Map(map,antimulti,type)
	if not isgame() then
		getgenv().repeating = true
		while wait(1) do
			if getgenv().repeating then
				getgenv().repeating = false
				local jc = 0
				for _,Elevators in pairs(game:GetService('Workspace').Elevators:GetChildren()) do
					local sc = Elevators.Screen.SurfaceGui.Status.Players
					local mp = Elevators.State.Map.Title
					local rq = require(Elevators.Settings).Type
					local plrs = Elevators.State.Players
					if type == nil then
						type = "Survival"
					end
					if mp.Value == map and rq == type then
						if (plrs.Value <= 0) then
							jc = jc + 1
							print("Join attempt...")
							getgenv().status = "Joining..."
							local args = {
								[1] = "Elevators",
								[2] = "Enter",
								[3] = Elevators
							}
							RSRF:InvokeServer(unpack(args))
							print("Joined elavator...")
							getgenv().status = "Joined"
							while wait() do
								getgenv().status = "Joined ("..Elevators.State.Timer.Value.."s)"
								if mp.Value == map then
									if antimulti then
										if (plrs.Value > 1) then
											local args = {
												[1] = "Elevators",
												[2] = "Leave"
											}
											RSRF:InvokeServer(unpack(args))
											print("Someone joined, leaving elevator...")
											getgenv().status = "Someone joined..."
											getgenv().repeating = true
											break
										elseif (plrs.Value == 0) then
											print("Something gone wrong, leaving...")
											getgenv().status = "Error (Initializing safety protocols...)"
											wait(5)
											print("Repeating safety protocols...")
											getgenv().status = "Repeating safety protocols..."
											getgenv().repeating = true
											break
										end
									end
								else
									local args = {
										[1] = "Elevators",
										[2] = "Leave"
									}
									RSRF:InvokeServer(unpack(args))
									print("Map changed while joining, leaving...")
									getgenv().status = "Map changed..."
									getgenv().repeating = true
									break
								end
							end
						end
					end
				end
				if jc == 0 then
					getgenv().repeating = true
					print("Waiting for map...")
					getgenv().status = "Waiting for map..."
				end
			end
		end
	end
end
if not isfolder("TDS_AutoStrat") and not isfile("TDS_AutoStrat/Webhook (Logs).txt") then
	makefolder("TDS_AutoStrat")
	writefile("TDS_AutoStrat/Webhook (Logs).txt", "WEBHOOK HERE")
end
writefile("??????????.txt","KxjhVghCJH")
function scrip:Mode(mode)
	if isgame() then
		spawn(function()
			for c = 1,10 do
				wait(2)
				RSRF:InvokeServer('Difficulty', 'Vote', mode)
			end
			wait(1)
			output("Selected Mode (Mode "..mode..")")
		end)
	end
end
function scrip:Loadout(t1,t2,t3,t4,t5)
	getgenv().TroopNameNEW = t1
	getgenv().TroopName2NEW = t2
	getgenv().TroopName3NEW = t3
	getgenv().TroopName4NEW = t4
	getgenv().TroopName5NEW = t5
	if getgenv().IsMultiStrat then
		wait(1)
		if isgame() then
			EquipTroop(t1)
			EquipTroop(t2)
			EquipTroop(t3)
			EquipTroop(t4)
			EquipTroop(t5)
		end
	else
		if not isgame() then
			for i,v in pairs(game:GetService("ReplicatedStorage").Assets.Troops:GetChildren()) do
				local args = {
					[1] = "Inventory",
					[2] = "Execute",
					[3] = "Troops",
					[4] = "Remove",
					[5] = {
						["Name"] = v.Name
					}
				}
				game:GetService("ReplicatedStorage").RemoteEvent:FireServer(unpack(args))
				wait()
			end
			EquipTroop(t1)
			EquipTroop(t2)
			EquipTroop(t3)
			EquipTroop(t4)
			EquipTroop(t5)
		end
	end
end
function scrip:Place(troop,posx,posy,posz,wave,timem,times,inbetween)
	spawn(function()
		if isgame() then
			print("Waiting for time (Troop "..troop..")")
			repeat wait() until RS.State.Wave.Value == wave
			repeat wait() until RS.State.Timer.Time.Value == conv(times,timem)
			if inbetween then
				wait(1.5)
				print("Placing inbetween (Troop "..troop..")")
				repeat wait() until RS.State.Timer.Time.Value == times
			end
			print("Placing normal (Troop "..troop..")")
			place(troop,posx,posy,posz)
		end
	end)
end
function scrip:Upgrade(id,wave,timem,times,inbetween)
	spawn(function()
		if isgame() then
			repeat wait() until RS.State.Wave.Value == wave
			repeat wait() until RS.State.Timer.Time.Value == conv(times,timem)
			if inbetween then
				wait(1.5)
				repeat wait() until RS.State.Timer.Time.Value == times
			end
			upgrade(id)
		end
	end)
end
function scrip:Sell(id,wave,timem,times,inbetween)
	spawn(function()
		if isgame() then
			repeat wait() until RS.State.Wave.Value == wave
			repeat wait() until RS.State.Timer.Time.Value == conv(times,timem)
			if inbetween then
				wait(1.5)
				repeat wait() until RS.State.Timer.Time.Value == times
			end
			output("Sold (Troop "..game.Workspace.Towers[tostring(id)].Type.Value.." With Number "..tostring(id)..")")
			sell(id)
		end
	end)
end
function scrip:Skip(wave,timem,times)
	spawn(function()
		if isgame() then
			repeat wait() until RS.State.Wave.Value == wave
			repeat wait() until RS.State.Timer.Time.Value == conv(times,timem)
			skip()
		end
	end)
end
function scrip:Ability(id,aname,wave,timem,times)
	spawn(function()
		if isgame() then
			repeat wait() until RS.State.Wave.Value == wave
			repeat wait() until RS.State.Timer.Time.Value == conv(times,timem)
			ability(id,aname)
		end
	end)
end
function scrip:AutoChain(id1,id2,id3,wave,timem,times)
	spawn(function()
		if isgame() then
			repeat wait() until RS.State.Wave.Value == wave
			repeat wait() until RS.State.Timer.Time.Value == conv(times,timem)
			repeat wait() until game:GetService("Workspace").Towers:FindFirstChild(tostring(id1))
			repeat wait() until game:GetService("Workspace").Towers:FindFirstChild(tostring(id2))
			repeat wait() until game:GetService("Workspace").Towers:FindFirstChild(tostring(id3))
			output("Activated AutoChain (Troops "..tostring(id1)..", "..tostring(id2)..", "..tostring(id3)..")")
			while wait() do
				if game:GetService("Workspace").Towers:FindFirstChild(tostring(id1)) then
					local args = {
						[1] = "Troops",
						[2] = "Abilities",
						[3] = "Activate",
						[4] = {
							["Troop"] = game:GetService("Workspace").Towers:FindFirstChild(tostring(id1)),
							["Name"] = "Call Of Arms",						
						}
					}
					game:GetService("ReplicatedStorage").RemoteFunction:InvokeServer(unpack(args))
				else
					print("ERROR : Commander 1 removed, aborting script...")
					break
				end
				wait(10.1)
				if game:GetService("Workspace").Towers:FindFirstChild(tostring(id2)) then
					local args = {
						[1] = "Troops",
						[2] = "Abilities",
						[3] = "Activate",
						[4] = {
							["Troop"] = game:GetService("Workspace").Towers:FindFirstChild(tostring(id2)),
							["Name"] = "Call Of Arms",						
						}
					}
					game:GetService("ReplicatedStorage").RemoteFunction:InvokeServer(unpack(args))
				else
					print("ERROR : Commander 2 removed, aborting script...")
					break
				end
				wait(10.1)
				if game:GetService("Workspace").Towers:FindFirstChild(tostring(id3)) then
					local args = {
						[1] = "Troops",
						[2] = "Abilities",
						[3] = "Activate",
						[4] = {
							["Troop"] = game:GetService("Workspace").Towers:FindFirstChild(tostring(id3)),
							["Name"] = "Call Of Arms",						
						}
					}
					game:GetService("ReplicatedStorage").RemoteFunction:InvokeServer(unpack(args))
				else
					print("ERROR : Commander 3 removed, aborting script...")
					break
				end
				wait(10.1)
			end
		end
	end)
end
function scrip:Target(id,wave,timem,times)
	spawn(function()
		if isgame() then
			repeat wait() until RS.State.Wave.Value == wave
			repeat wait() until RS.State.Timer.Time.Value == conv(times,timem)
			repeat wait() until game.Workspace.Towers:FindFirstChild(tostring(id))
			local args = {
				[1] = "Troops",
				[2] = "Target",
				[3] = "Set",
				[4] = {
					["Troop"] = game.Workspace.Towers:WaitForChild(tostring(id)),
				}
			}
			RSRF:InvokeServer(unpack(args))
			output("Changed Target (Troop "..game.Workspace.Towers[tostring(id)].Type.Value.." With Number "..tostring(id)..")")
		end
	end)
end
return scrip